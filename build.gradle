// vim: ft=groovy
defaultTasks 'clean', 'build'
description = 'Gradle configuration for stubby4j'

buildscript {
   repositories {
      mavenCentral()
   }

   dependencies {
      classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.2'
   }

}

def totalTestCounter = 0
allprojects {
   apply plugin: 'java'
   apply plugin: 'idea'
   apply plugin: 'eclipse'
   project.buildDir = 'target'

   if (project.name != 'main') {
      tasks.withType(Test) {
         Task testTask ->
            def totalSuiteCount = 0
            def successSuiteCount = 0
             testReport = false
            testLogging {
               events /*"passed", */"skipped", "failed"
               exceptionFormat "full"
               showExceptions true
               showCauses true
               showStackTraces true
            }
            doFirst {
               //println ""
               //println "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
               //println ":::::                         Running " + project.name.toUpperCase() + " module tests"
               //println "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
            }
            afterSuite { testDescriptor, testResult ->
               if (testDescriptor.getName().contains("$stubbyProjectGroup")) {
                  totalSuiteCount += testResult.getTestCount()
                  totalTestCounter += testResult.getTestCount()
                  successSuiteCount += testResult.getSuccessfulTestCount()
               }
            }
            doLast {
               println ""
               println "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
               println ":::::                         Ran " + project.name.toUpperCase() + " module tests"
               println "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
               println ":::::                             Passed (" + successSuiteCount + "/" + totalSuiteCount  + ") tests"
               println ":::::               Total tests executed in $stubbyProjectName project so far " + totalTestCounter
               println "::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::"
               println ""
            } 
      }
   }
}

apply from: "$rootDir/conf/gradle/ides.gradle"

subprojects {
   subproject ->
      sourceCompatibility = 1.8
      tasks.withType(Compile) {
         doFirst {
            assert sourceCompatibility == "1.8": "The sourceCompatibility of $name was changed!"
         }
         options.encoding = 'UTF-8'
      }
      targetCompatibility = 1.8

      repositories {
         mavenCentral()
         mavenLocal()
      }

      apply from: "$rootDir/conf/gradle/dependencies.gradle"
      if (subproject.name != 'main' && subproject.name != 'builders') {
         apply from: "$rootDir/conf/gradle/cobertura.gradle"
      }
}

project(":").tasks.each {
   task ->
      def taskNameLowerCase = task.name.toLowerCase()
      if (!taskNameLowerCase.contains("idea") && 
         !taskNameLowerCase.contains("eclipse") &&
         !taskNameLowerCase.contains("clean")) {
         task.enabled = false
         println ":" + task.name + " => Disabling task.." 
      }
}

def projects = [project(":unit"), project(":integration"), project(":functional") ]
projects.each {
   project ->
      project.tasks.each {
         task ->
            def taskNameLowerCase = task.name.toLowerCase()
            if (taskNameLowerCase.contains("jar")) {
               task.enabled = false
               println ":" + project.name + ":" + task.name + " => Disabling task.."
            }
         }
}
