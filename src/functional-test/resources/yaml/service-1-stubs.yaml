-  request:
     method:
       -  GET
       -  POST
       -  PUT
     url: ^/resources/asn/.*$

   response:
     status: 200
     body: >
       {"status": "ASN found!"}
     headers:
       content-type: application/json


-  request:
     method:
       -  GET
       -  POST
       -  PUT
     url: /this/stub/should/always/be/second/in/this/file

   response:
     status: 200
     body: OK
     headers:
       content-type: application/json


-  request:
     method: [GET, POST, PUT]
     url: ^/[a-z]{3}-[a-z]{3}/[0-9]{2}/[A-Z]{2}/[a-z0-9]+\?paramOne=[a-zA-Z]{3,8}&paramTwo=[a-zA-Z]{3,8}$

   response:
     status: 200
     body: >
       {"status": "The regex with query params works!"}
     headers:
       content-type: application/json

-  request:
     method: GET
     url: ^/[a-z]{3}-[a-z]{3}/[0-9]{2}/[A-Z]{2}/[a-z0-9]+$

   response:
     status: 200
     body: >
       {"status": "The regex works!"}
     headers:
       content-type: application/json

-  request:
     method: GET
     url: /entity.find.again
     query:
       type_name: user
       client_id: id
       client_secret: secret
       attributes: '[id,uuid,created,lastUpdated,displayName,email,givenName,familyName]'

   response:
     status: 200
     body: >
       {"status": "hello world"}
     headers:
       content-type: application/json

-  request:
     method: GET
     url: /entity.find
     query:
       type_name: user
       client_id: id
       client_secret: secret
       attributes: '["id","uuid","created","lastUpdated","displayName","email","givenName","familyName"]'

   response:
     status: 200
     body: >
       {"status": "hello world"}
     headers:
       content-type: application/json


-  request:
     method: GET
     url: /entity.find.single.quote
     query:
       type_name: user
       client_id: id
       client_secret: secret
       attributes: "['id','uuid','created','lastUpdated','displayName','email','givenName','familyName']"

   response:
     status: 200
     body: >
       {"status": "hello world with single quote"}
     headers:
       content-type: application/json

-  request:
     method: GET
     url: /entity.find.spaces.within
     query:
       key: "stalin and truman are best buddies"

   response:
     status: 200
     body: >
       {"status": "hello world with spaces within values"}
     headers:
       content-type: application/json


-  request:
     method: GET
     url: /entity.find.single.quote.spaces.within
     query:
       key: "['stalin and truman','are best friends']"

   response:
     status: 200
     body: >
       {"status": "hello world with single quote and spaces within"}
     headers:
       content-type: application/json


-  request:
     method: GET
     url: /pdf/hello-world

   response:
     headers:
       content-type: application/pdf
       content-disposition: attachment; filename=hello-world.pdf
       pragma: no-cache
     status: 200
     file: ../binary/hello-world.pdf

-  request:
     method: GET
     url: /invoice
     query:
       status: active
       type: full
   response:
     headers:
       content-type: application/json
       pragma: no-cache
     status: 200
     file: ../json/response.json


-  request:
     method: PUT
     url: /invoice/123
     headers:
       content-type: application/json
     post: >
       {"name": "milk", "description": "full", "department": "savoury"}

   response:
     headers:
       content-type: application/json
       pragma: no-cache
     status: 200
     body: >
       {"id": "123", "status": "updated"}

-  request:
     method: POST
     url: /invoice/new
     headers:
       content-type: application/json
     post: >
       {"name": "chocolate", "description": "full", "department": "savoury"}

   response:
     headers:
       content-type: application/json
       pragma: no-cache
     status: 201
     body: >
       {"id": "456", "status": "created"}


-  request:
     method: POST
     url: /post-body-as-json
     headers:
       content-type: application/json
     post: >
       {"userId":"19","requestId":"(.*)","transactionDate":"(.*)","transactionTime":"(.*)"}

   response:
     headers:
       content-type: application/json
     status: 200
     body: >
       {"requestId": "<%post.1%>", "transactionDate": "<%post.2%>", "transactionTime": "<%post.3%>"}

-  request:
     method: POST
     url: /post-body-as-json-2
     headers:
       content-type: application/json
     post: >
       {"objects": [{"key": "value"}, {"key": "value"}, {"key": {"key": "(.*)"}}]}

   response:
     headers:
       content-type: application/json
     status: 200
     body: >
       {"internalKey": "<%post.1%>"}

