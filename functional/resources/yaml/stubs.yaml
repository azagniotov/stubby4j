-  request:
      method:
         -  GET
         -  POST
         -  PUT 
      url: ^/resources/asn/

   response:
      status: 200
      body: >
         {"status": "ASN found!"}
      headers:
         content-type: application/json


-  request:
      method: [GET, POST, PUT]
      url: ^/[a-z]{3}-[a-z]{3}/[0-9]{2}/[A-Z]{2}/[a-z0-9]+\?paramOne=[a-zA-Z]{3,8}&paramTwo=[a-zA-Z]{3,8}

   response:
      status: 200
      body: >
         {"status": "The regex with query params works!"}
      headers:
         content-type: application/json

-  request:
      method: GET
      url: ^/[a-z]{3}-[a-z]{3}/[0-9]{2}/[A-Z]{2}/[a-z0-9]+$

   response:
      status: 200
      body: >
         {"status": "The regex works!"}
      headers:
         content-type: application/json

-  request:
      method: GET
      url: /entity.find.again
      query:
         type_name: user
         client_id: id
         client_secret: secret
         attributes: '[id,uuid,created,lastUpdated,displayName,email,givenName,familyName]'

   response:
      status: 200
      body: >
         {"status": "hello world"}
      headers:
         content-type: application/json

-  request:
      method: GET
      url: /entity.find
      query:
         type_name: user
         client_id: id
         client_secret: secret
         attributes: '["id","uuid","created","lastUpdated","displayName","email","givenName","familyName"]'

   response:
      status: 200
      body: >
         {"status": "hello world"}
      headers:
         content-type: application/json


-  request:
      method: GET
      url: /entity.find.single.quote
      query:
         type_name: user
         client_id: id
         client_secret: secret
         attributes: "['id','uuid','created','lastUpdated','displayName','email','givenName','familyName']"

   response:
      status: 200
      body: >
         {"status": "hello world with single quote"}
      headers:
         content-type: application/json


-  request:
      method: GET
      url: /pdf/hello-world
   response:
      headers:
         content-type: application/pdf
         content-disposition: attachment; filename=hello-world.pdf
         pragma: no-cache
      status: 200
      file: ../binary/hello-world.pdf

-  request:
      method: GET
      url: /invoice
      query:
         status: active
         type: full
   response:
      headers:
         content-type: application/json
         pragma: no-cache
      status: 200
      file: ../json/response.json


-  request:
      method: PUT
      url: /invoice/123
      headers:
         content-type: application/json
      post: >
         {"name": "milk", "description": "full", "department": "savoury"}
   response:
      headers:
         content-type: application/json
         pragma: no-cache
      status: 200
      body: >
         {"id": "123", "status": "updated"}

-  request:
      method: POST
      url: /invoice/new
      headers:
         content-type: application/json
      post: >
         {"name": "chocolate", "description": "full", "department": "savoury"}
   response:
      headers:
         content-type: application/json
         pragma: no-cache
      status: 201
      body: >
         {"id": "456", "status": "created"}

-  request:
      url: /invoice/new/no/post
      method: POST
   response:
      status: 204

-  request:
      method: POST
      url: /item/path
      query:
         paramTwo: 12345
         paramOne: valueOne

   response:
      status: 201
      body: OK



-  request:
      method: GET
      url: /item/redirect

   response:
      latency: 1000
      status: 301
      headers:
         location: /item/1
      body:

-  request:
      method: GET
      url: /atomfeed/1

   response:
      headers:
         content-type: application/xml
      status: 200
      body: <?xml version="1.0" encoding="UTF-8"?><payment><invoiceTypeLookupCode>STANDARD</invoiceTypeLookupCode><invoiceDate>2012-06-27 14:51:26.416 PDT</invoiceDate><invoiceAmount>880.10</invoiceAmount><poNumber>1000054</poNumber><invoiceNumber>23423423</invoiceNumber><invoiceCurrencyCode>USD</invoiceCurrencyCode><vendorNumber>12345</vendorNumber><paymentDetails><paymentDetail><lineNumber>123</lineNumber><amount>20.10</amount><invoiceDate>2012-06-27 14:51:26.417 PDT</invoiceDate><legalEntity>100</legalEntity><coaDivision>10</coaDivision><coaAccount>2451</coaAccount><coaDepartment>9101</coaDepartment><coaArea>90005</coaArea><coaMerch>0000</coaMerch><coaInterUnit>000</coaInterUnit><coaFutureUse>0000</coaFutureUse><lineTypeLookupCode>ITEM</lineTypeLookupCode><taxCode /></paymentDetail><paymentDetail><lineNumber>124</lineNumber><amount>80.10</amount><invoiceDate>2012-06-27 14:51:26.417 PDT</invoiceDate><legalEntity>100</legalEntity><coaDivision>10</coaDivision><coaAccount>2451</coaAccount><coaDepartment>9101</coaDepartment><coaArea>90005</coaArea><coaMerch>0000</coaMerch><coaInterUnit>000</coaInterUnit><coaFutureUse>0000</coaFutureUse><lineTypeLookupCode>TEXT</lineTypeLookupCode><taxCode>VAT10</taxCode></paymentDetail></paymentDetails></payment>

-  request:
      method: GET
      url: /item/1

   response:
      headers:
         content-type: application/json
      status: 200
      body: >
         {"id" : "1", "description" : "milk"}


-  request:
      headers:
         authorization: bob:secret
      method: GET
      url: /item/auth

   response:
      headers:
         content-type: application/json
      status: 200
      body: >
         {"id" : "8", "description" : "authorized"}


-  request:
      method: POST
      url: /item/1
      post: post body

   response:
      headers:
         content-type: text/plain
      status: 200
      body: Got post response


-  request:
      headers:
         authorization: bob:secret
      method: POST
      url: /item/submit
      post: >
         {"action" : "submit"}

   response:
      headers:
         content-type: text/plain
      status: 200
      body: OK


-  request:
      method: [GET]
      url: /uri/with/sequenced/responses

   response:
      -  status: 201
         headers:
            content-type: application/json
         body: OK

      -  status: 201
         headers:
            content-stype: application/json
         body: Still going strong!

      -  status: 500
         headers:
            content-type: application/json
         body: OMFG!!!



-  request:
      method: [GET]
      url: /uri/with/single/sequenced/response

   response:
      -  status: 201
         headers:
            content-stype: application/json
         body: Still going strong!

-  request:
      method: POST
      url: /json/matcher/test
      content-type: application/json
      post: >
         {"foo": "12", "bar" : {"hello" : "world"}}

   response:
      -  status: 200
         headers:
            content-type: text/plain
         body: Matches foo and bar

-  request:
      method: POST
      url: /json/matcher/test
      content-type: application/json
      post: >
         {"foo": "12"}
   response:
      -  status: 200
         headers:
            content-type: text/plain
         body: Matches foo

-  request:
      method: POST
      url: /json/matcher/test
   response:
      -  status: 200
         headers:
            content-type: text/plain
         body: Matched none


-  request:
      method: POST
      url: /echo/response
   response:
      -  status: 200
         headers:
            content-type: text/plain
         body: ${requestBody}


-  request:
      method: POST
      url: /templatize/response
   response:
      -  status: 200
         headers:
            content-type: application/json
         body: >
               <#assign requestBodyJson = requestBody?eval>
               {"foo": "${requestBodyJson.foo}"}


-  request:
      method: POST
      url: /templatize/response/with/query/params
   response:
      -  status: 200
         headers:
            content-type: application/json
         body: >
               <#assign requestBodyJson = requestBody?eval>
               {"foo": "${requestBodyJson.foo}","bar": "${requestParams.bar}"}



-  request:
      method: GET
      url: /templatize/current_date
   response:
      -  status: 200
         headers:
            content-type: application/json
         body: >
               {"current_date": " ${.now?string("yyyy-MM-dd HH:mm:00")}"}



